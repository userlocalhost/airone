version: 2
jobs:
  python38:
    docker:
      - image: circleci/python:3.8
      - image: rabbitmq:3.8.19-management
      - image: bitnami/memcached:1.6.9
      - image: docker.elastic.co/elasticsearch/elasticsearch:6.8.16
        environment:
          discovery.type: single-node
          ES_JAVA_OPTS: -Xms512m -Xmx512m
      - image: mysql:5.7.34
        environment:
          MYSQL_USER: airone
          MYSQL_PASSWORD: password
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: airone
        command: [--character-set-server=utf8, --collation-server=utf8_general_ci, --default-storage-engine=innodb]
    environment:
      TOXENV: "py38"
    steps:
      - checkout
      - run:
          name: Wait for ElasticSearch
          command: dockerize -wait tcp://127.0.0.1:9200 -timeout 120s
      - restore_cache:
          key: py38-{{ checksum "requirements.txt" }}-{{ checksum "tox.ini" }}
      - run:
          name: Install tox tox-pyenv coverage
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install --upgrade pip
            pip install tox coverage codecov
      - run:
          name: Wait for MySQL is available
          command: dockerize -wait tcp://127.0.0.1:3306 -timeout 120s
      - run:
          name: Grant permission for airone user to be able to manipulate multiple databases (airone and test_airone)
          command: |
            sudo apt-get update
            sudo apt-get install -y default-mysql-client
            mysql -uroot -h127.0.0.1 -ppassword -e "GRANT ALL ON *.* to airone@'%' IDENTIFIED BY 'password'"
      - run:
          name: Install additional dependencies
          command: |
            sudo apt-get install -y libldap2-dev libsasl2-dev
      - run:
          name: Testing
          command: |
            . venv/bin/activate
            tox
      - save_cache:
          key: py38-{{ checksum "requirements.txt" }}-{{ checksum "tox.ini" }}
          paths:
            - venv
            - .tox/py38
      - run:
          name: Coverage
          command: |
            . venv/bin/activate
            codecov

  pep8:
    docker:
      - image: circleci/python:3.8
    environment:
      TOXENV: "pep8"
    steps:
      - checkout
      - run:
          name: Install tox tox-pyenv
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install --upgrade pip
            pip install tox
      - run:
          name: Install additional dependencies
          command: |
            sudo apt-get update
            sudo apt-get install -y libldap2-dev libsasl2-dev
      - run:
          name: flake8
          command: |
            . venv/bin/activate
            tox

  mypy:
    docker:
      - image: circleci/python:3.8
    environment:
      TOXENV: "mypy"
    steps:
      - checkout
      - run:
          name: Install tox tox-pyenv
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install tox
      - run:
          name: Install additional dependencies
          command: |
            sudo apt-get install -y libldap2-dev libsasl2-dev
      - run:
          name: mypy
          command: |
            . venv/bin/activate
            tox

  build_gh_page:
    docker:
      - image: cibuilds/hugo:0.74
    steps:
      - checkout
      - run:
          name: Build contents for GitHub pages
          command: |
            cd docs
            hugo
      - run:
          name: Deploy contents to the gh_pages branch
          command: ./scripts/deploy_gh_pages_using_circle-ci.sh

  frontend:
    docker:
      - image: circleci/node
    steps:
      - checkout
      - run:
          name: Resolve dependency
          command: |
            npm install
      - run:
          name: lint
          command: |
            npm run lint
      - run:
          name: test
          command: |
            npm run test:ci

workflows:
  version: 2
  build_and_test:
    jobs:
      - python38
      - pep8
      - frontend
      - mypy
      - build_gh_page:
          filters:
            branches:
              only: master
